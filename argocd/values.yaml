argo-cd:
  installCRDs: false
  global:
    image:
      repository: argoproj/argocd
#      tag: v2.2.3
  dex:
    enabled: false

  repoServer:
    autoscaling:
      enabled: true
      minReplicas: 2
      targetCPUUtilizationPercentage: 85
      targetMemoryUtilizationPercentage: 85

    # volumeMounts:
    #   - name: helm-values
    #     mountPath: /helm-values
    # volumes:
    #   - name: helm-values
    #     secret:
    #       secretName: argo-helm-values
    #       optional: true
    # resources:
    #   requests:
    #     cpu: 5526m
    #     memory: 4744M

    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - argocd-repo-server
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                    - argocd
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - repo-server
            topologyKey: "kubernetes.io/hostname"
  server:
    service:
      type: NodePort
    extraArgs:
      - --insecure
    config:
      repositories: |
        - type: helm
          name: stable
          url: https://charts.helm.sh/stable
        - type: helm
          name: argo-cd
          url: https://argoproj.github.io/argo-helm
        - type: git
          url: https://github.com/Puller23/home-ops-test.git
          passwordSecret:
            name: deployment-git-repo-credentials
            key: password
          usernameSecret:
            name: deployment-git-repo-credentials
            key: username
# Following the guide at https://argoproj.github.io/argo-cd/user-guide/diffing/#system-level-configuration
      resource.customizations: |
        admissionregistration.k8s.io/MutatingWebhookConfiguration:
          ignoreDifferences: |
            jsonPointers:
            - /webhooks/0/clientConfig/caBundle
# metrics:
    #   enabled: true
    #   serviceMonitor:
    #     enabled: true
    # autoscaling:
    #   enabled: true
    #   minReplicas: 2
    #   targetCPUUtilizationPercentage: 85
    #   targetMemoryUtilizationPercentage: 85
    # resources:
    #   requests:
    #     cpu: 100m
    #     memory: 105Mi
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - argocd-server
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                    - argocd
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - server
            topologyKey: "kubernetes.io/hostname"
  controller:
    extraArgs:
    - --repo-server-timeout-seconds
    - "500"
    - --status-processors
    - "10"
    - --operation-processors
    - "5"
  repoServer:
    replicas: 2
    env:
      - name: "ARGOCD_EXEC_TIMEOUT"
        value: "5m"

  redis:
    image:
      repository: redis
      tag: 6.2.6-alpine

  notifications:
    # -- Enable Notifications controller
    enabled: true
    name: notifications-controller
  argocdUrl: http://172.18.18.40:30080/
  secret:
    create: false
  triggers:
    # For more information: https://argocd-notifications.readthedocs.io/en/stable/triggers/
    trigger.on-deployed: |
      - description: Application is synced and healthy. Triggered once per commit.
        oncePer: app.status.sync.revision
        send:
        - app-deployed
        when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'
    trigger.on-health-degraded: |
      - description: Application has degraded
        send:
        - app-health-degraded
        when: app.status.health.status == 'Degraded'
    trigger.on-sync-failed: |
      - description: Application syncing has failed
        send:
        - app-sync-failed
        when: app.status.operationState.phase in ['Error', 'Failed']
    trigger.on-sync-running: |
      - description: Application is being synced
        send:
        - app-sync-running
        when: app.status.operationState.phase in ['Running']
    trigger.on-sync-status-unknown: |
      - description: Application status is 'Unknown'
        send:
        - app-sync-status-unknown
        when: app.status.sync.status == 'Unknown'
    trigger.on-sync-succeeded: |
      - description: Application syncing has succeeded
        send:
        - app-sync-succeeded
        when: app.status.operationState.phase in ['Succeeded']

  templates:
    # For more information: https://argocd-notifications.readthedocs.io/en/stable/templates/
    template.app-deployed: |
      email:
        subject: New version of an application {{.app.metadata.name}} is up and running.
      message: |
        Application {{.app.metadata.name}} is now running new version of deployments manifests.
      webhook:
        discord:
          method: POST
          body: |
            {
              "username": "ArgoCd",
              "avatar_url": "https://avatars.githubusercontent.com/u/30269780",
              "content": ":white_check_mark: Application {{.app.metadata.name}} is now running new version of deployments manifests.",
              "embeds": [
                {
                  "title": "{{ .app.metadata.name}}",
                  "url":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                  "color": 1621586,
                  "fields": [
                  {
                    "name": "Sync Status",
                    "value": "{{.app.status.sync.status}}",
                    "inline": true
                  },
                  {
                    "name": "Repository",
                    "value": "{{.app.spec.source.repoURL}}",
                    "inline": true
                  },
                  {
                    "name": "Revision",
                    "value": "{{.app.status.sync.revision}}",
                    "inline": true
                  }
                  {{range $index, $c := .app.status.conditions}}
                  {{if not $index}},{{end}}
                  {{if $index}},{{end}}
                  {
                    "name": "{{$c.type}}",
                    "value": "{{$c.message}}",
                    "inline": true
                  }
                  {{end}}
                  ]
                }
              ]
            }
    template.app-health-degraded: |
      email:
        subject: Application {{.app.metadata.name}} has degraded.
      message: |
        Application {{.app.metadata.name}} has degraded.
        Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.
      webhook:
        discord:
          method: POST
          body: |
            {
              "username": "ArgoCd",
              "avatar_url": "https://avatars.githubusercontent.com/u/30269780",
              "content": ":exclamation: Application {{.app.metadata.name}} has degraded.",
              "embeds": [
                {
                  "title": "{{ .app.metadata.name}}",
                  "url":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                  "color": 16039984,
                  "fields": [
                  {
                    "name": "Sync Status",
                    "value": "{{.app.status.sync.status}}",
                    "inline": true
                  },
                  {
                    "name": "Repository",
                    "value": "{{.app.spec.source.repoURL}}",
                    "inline": true
                  }
                  {{range $index, $c := .app.status.conditions}}
                  {{if not $index}},{{end}}
                  {{if $index}},{{end}}
                  {
                    "name": "{{$c.type}}",
                    "value": "{{$c.message}}",
                    "inline": true
                  }
                  {{end}}
                  ]
                }
              ]
            }
    template.app-sync-failed: |
      email:
        subject: Failed to sync application {{.app.metadata.name}}.
      message: |
        The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}
        Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
      webhook:
        discord:
          method: POST
          body: |
            {
              "username": "ArgoCd",
              "avatar_url": "https://avatars.githubusercontent.com/u/30269780",
              "content": ":exclamation: The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}",
              "embeds": [
                {
                  "title": "{{ .app.metadata.name}}",
                  "url":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                  "color": "#E96D76",
                  "fields": [
                  {
                    "name": "Sync Status",
                    "value": "{{.app.status.sync.status}}",
                    "inline": true
                  },
                  {
                    "name": "Repository",
                    "value": "{{.app.spec.source.repoURL}}",
                    "inline": true
                  }
                  {{range $index, $c := .app.status.conditions}}
                  {{if not $index}},{{end}}
                  {{if $index}},{{end}}
                  {
                    "name": "{{$c.type}}",
                    "value": "{{$c.message}}",
                    "inline": true
                  }
                  {{end}}
                  ]
                }
              ]
            }
    template.app-sync-running: |
      email:
        subject: Start syncing application {{.app.metadata.name}}.
      message: |
        The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.
        Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
      webhook:
        discord:
          method: POST
          body: |
            {
              "username": "ArgoCd",
              "avatar_url": "https://avatars.githubusercontent.com/u/30269780",
              "content": "The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.",
              "embeds": [
                {
                  "title": "{{ .app.metadata.name}}",
                  "url":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                  "color": 896490,
                  "fields": [
                  {
                    "name": "Sync Status",
                    "value": "{{.app.status.sync.status}}",
                    "inline": true
                  },
                  {
                    "name": "Repository",
                    "value": "{{.app.spec.source.repoURL}}",
                    "inline": true
                  }
                  {{range $index, $c := .app.status.conditions}}
                  {{if not $index}},{{end}}
                  {{if $index}},{{end}}
                  {
                    "name": "{{$c.type}}",
                    "value": "{{$c.message}}",
                    "inline": true
                  }
                  {{end}}
                  ]
                }
              ]
            }
    template.app-sync-status-unknown: |
      email:
        subject: Application {{.app.metadata.name}} sync status is 'Unknown'
      message: |
        Application {{.app.metadata.name}} sync is 'Unknown'.
        Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.
        {{if ne .serviceType "slack"}}
        {{range $c := .app.status.conditions}}
            * {{$c.message}}
        {{end}}
        {{end}}
      webhook:
        discord:
          method: POST
          body: |
            {
              "username": "ArgoCd",
              "avatar_url": "https://avatars.githubusercontent.com/u/30269780",
              "content": ":exclamation: Application {{.app.metadata.name}} sync is 'Unknown'.",
              "embeds": [
                {
                  "title": "{{ .app.metadata.name}}",
                  "url":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                  "color": 15297910,
                  "fields": [
                  {
                    "name": "Sync Status",
                    "value": "{{.app.status.sync.status}}",
                    "inline": true
                  },
                  {
                    "name": "Repository",
                    "value": "{{.app.spec.source.repoURL}}",
                    "inline": true
                  }
                  {{range $index, $c := .app.status.conditions}}
                  {{if not $index}},{{end}}
                  {{if $index}},{{end}}
                  {
                    "name": "{{$c.type}}",
                    "value": "{{$c.message}}",
                    "inline": true
                  }
                  {{end}}
                  ]
                }
              ]
            }
    template.app-sync-succeeded: |
      email:
        subject: Application {{.app.metadata.name}} has been successfully synced.
      message: |
        Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.
        Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
      webhook:
        discord:
          method: POST
          body: |
            {
              "username": "ArgoCd",
              "avatar_url": "https://avatars.githubusercontent.com/u/30269780",
              "content": ":white_check_mark: Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.",
              "embeds": [
                {
                  "title": "{{ .app.metadata.name}}",
                  "url":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                  "color": 1621586,
                  "fields": [
                  {
                    "name": "Sync Status",
                    "value": "{{.app.status.sync.status}}",
                    "inline": true
                  },
                  {
                    "name": "Repository",
                    "value": "{{.app.spec.source.repoURL}}",
                    "inline": true
                  }
                  {{range $index, $c := .app.status.conditions}}
                  {{if not $index}},{{end}}
                  {{if $index}},{{end}}
                  {
                    "name": "{{$c.type}}",
                    "value": "{{$c.message}}",
                    "inline": true
                  }
                  {{end}}
                  ]
                }
              ]
            }
  subscriptions:
    # For more information: https://argocd-notifications.readthedocs.io/en/stable/subscriptions/
    # # subscription for on-sync-status-unknown trigger notifications
    - recipients:
        - discord
      triggers:
        - on-deployed
        - on-sync-failed
        - on-sync-running
        - on-sync-status-unknown
        - on-health-degraded
#        - on-sync-succeeded

  notifiers:
    # For more information: https://argocd-notifications.readthedocs.io/en/stable/services/overview/
    service.webhook.discord: |
      url: https://discord.com/api/webhooks/1012655977968979968/oYti6pRyJ79rv-EghoyLkvHnTv5M-4zox2EaHSTUlmyDW1og690sZunWtdx8_f3krvcx
      headers:
      - name: Content-Type
        value: application/json